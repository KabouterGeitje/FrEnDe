/* CSS Document */

/*********/
/* FONTS */
/*********/
@font-face {
	font-family: 'eenfont';
	src: url('../fonts/eenfont.woff2') format('woff2'),
			 url('../fonts/eenfont.woff') format('woff');
	font-weight: normal;
	font-style: normal;

}

/**************/
/* CSS REMEDY */
/**************/
*, *::after, *::before {
  box-sizing:border-box;  
}

button, summary {
	cursor: pointer;
}

/*********************/
/* CUSTOM PROPERTIES */
/*********************/
:root {
	--transparent-background:transparent;
	--color-background:#15171E;
  --font: halogen, sans-serif;
  --font-kleur:white;
  --element-kleur: #4481C3;
}

/****************/
/* JOUW STYLING */
/****************/
body {
  font-family: var(--font);
  font-weight: 700;
  font-style: normal;
  color:var(--font-kleur);
  background-color:var(--color-background);
  display: flex;
  justify-content: center;
  overflow: hidden;
}

/****************/
/* MIJN CODE */
/****************/

/* Toegankelijkheid optimaliseren met het uitzetten
van de animatie en een dark en light modus. */

@media(prefers-reduced-motion:reduce){
  body{
    animation-play-state: paused;
  }
}

@media(prefered-color-scheme:light){
  :root{
	--color-background:white;
    --font-kleur:#15171E;
    --element-kleur: #4481C3;
  }
}

/* Clamp op de font-size gezet, om de titel responsive te maken. */

.titel{
  font-size: clamp(0.5em, 2vw, 4em);
  height: max(8vw);
  padding-top: 0.3em;
  margin: 0;
  display: block;
}

/* Voor de animatie heb ik 3 elementen in 1 container gestopt. */

.woosh{
  margin: 0;
  position: absolute;
  left: 50%;
  padding-bottom: 20%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
}

/*

De animatie is niet goed responsive, omdat ik
de vormen heb gemaakt met een box-shadow en daar kan je geen percentages aangeven.

Nu zou je bijvoorbeeld met een if statement de pixels kunnen aanpassen met javascript,
maar ik wilde het helemaal doen met CSS. 

Ik heb in de code hieronder een radial
gradient gebruikt, maar die animatie loopt helaas niet echt vloeiend, waardoor ik toch
mijn voorkeur heb voor de animatie die gebruik maakt van de box-shadow.
*/
.deel.een, .deel.twee, .deel.drie{
  background-image: radial-gradient(100% 90% at 70% 60%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  width: 4vw; height: 8vw; 
  border-radius: 48% 52% 48% 52% / 48% 48% 52% 52%;
  animation: 0.7s linear 0s infinite running draaien;
}
.deel.een{
  transform: rotate(-25deg);
  position: absolute;
}

.deel.twee{
  transform: rotate(105deg);
  position: absolute;
}

.deel.drie{
  transform: rotate(225deg);
}
/*
In de code hieronder heb ik dus gebruik gemaakt van een box shadow en een border-radius om aan 
de vormen van mijn animatie te komen.

De animatie is wel responsive, maar als het scherm te klein wordt, dan veranderd 
de vorm te erg, omdat de values van de box-shadow dan te groot worden.


.deel.een, .deel.twee, .deel.drie{
  background-color:var(--transparent-background);
  box-shadow: -40px -40px 0 20px var(--element-kleur);
  width: 4vw; height: 8vw;
  border-radius: 48% 52% 48% 52% / 48% 48% 52% 52%;
  animation: 0.7s linear 0s infinite running draaien;
}
.deel.een{
  transform: rotate(-25deg);
  position: absolute;
}

.deel.twee{
  transform: rotate(105deg);
  position: absolute;
}

.deel.drie{
  transform: rotate(225deg);
}
*/
.battlenet {
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
}

/* Clamp op de font-size gezet, om de titel responsive te maken. */

.battlenet, h1{
    font-size: clamp(1em, 5vw, 4em);
    display: flex;
    flex-direction: row;
}

.punt{
    background-color:var(--element-kleur);
    height: 0.2em;
    width: 0.2em;
    border-radius: 50%;
    margin-top: 0.5em;
}



/* de animatie wanneer ik gebruik zou maken van een radial gradient in plaats van een box shadow. */

@keyframes draaien  {
  0%{
    background-image: radial-gradient(100% 90% at 70% 60%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  }
  20%{
    background-image: radial-gradient(100% 90% at 30% 60%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  }
  40%{
    background-image: radial-gradient(100% 90% at 30% 40%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  }
  60%{
    background-image: radial-gradient(100% 90% at 70% 40%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  }
  100%{
    background-image: radial-gradient(100% 90% at 70% 60%, var(--transparent-background) 50%, var(--element-kleur) 50%);
  }
}



/* Animatie van de woosh. 
@keyframes draaien  {
  0%{
    box-shadow: -40px -30px 0 20px var(--element-kleur);
  }
  20%{
    box-shadow: -20px -60px 0 10px var(--element-kleur);
  }
  40%{
    box-shadow: 40px 30px 0 20px var(--element-kleur);
  }
  60%{
    box-shadow: 20px 60px 0 10px var(--element-kleur);
  }
  100%{
    box-shadow: -40px -30px 0 20px var(--element-kleur);
  }
}
*/

/*
Ik had eerst een hele lastige vorm gebruikt die niet zo mooi verliep wanneer je hem annimeerde. 
toen dacht ik, je kan ook gewoon een ovaal maken en dat zag er gelijk een stuk mooier uit. Ook had ik
nog heel veel code dubbel.
Hieronder de code die ik had gebruikt.

.deel.een{
  background-color:transparent;
  box-shadow: -40px -30px 0 20px var(--element-kleur);
  position: absolute;
  width: 4em;
  height: 7.5em;
  border-radius: 36% 64% 0% 100% / 30% 100% 0% 70%;
  animation: 0.7s linear 0s infinite running draaien;
}

.deel.twee{
  background-color:transparent;
  box-shadow: -40px -30px 0 20px var(--element-kleur);
  transform: rotate(120deg);
  position: absolute;
  width: 4em;
  height: 7.5em;
  border-radius: 36% 64% 0% 100% / 30% 100% 0% 70%;
  animation: 0.7s linear 0s infinite running draaien;
}

.deel.drie{
  background-color:transparent;
  box-shadow: -40px -30px 0 20px var(--element-kleur);
  transform: rotate(240deg);
  width: 4em;
  height: 7.5em;
  border-radius: 36% 64% 0% 100% / 30% 100% 0% 70%;
  animation: 0.7s linear 0s infinite running draaien;
}
*/
